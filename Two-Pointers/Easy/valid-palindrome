//https://leetcode.com/problems/valid-palindrome/

//O(n) but could do this in 1 step intead of making a stringbuilder first in order to not use extra space


class Solution {
    public boolean isPalindrome(String s) {
        
        //remove all non-alphanumeric characters

        StringBuilder checkString = new StringBuilder();

        for (int i = 0; i < s.length(); i++){

            if(Character.isLetterOrDigit(s.charAt(i))){
                checkString.append(Character.toLowerCase(s.charAt(i)));
            }

        }

        s = checkString.toString();

        //check if palindrome

        for(int i = 0; i < s.length() / 2; i++){
            if(s.charAt(i) != s.charAt(s.length() - 1 - i)){
                return false;
            }
        }

        return true;
    }
}