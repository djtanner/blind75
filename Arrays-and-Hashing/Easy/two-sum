//https://leetcode.com/problems/two-sum/description/

//One pass hashmap - check if complement exists and return
//O(n) time and O(n) space


class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        //map (target diff, index)
        HashMap<Integer,Integer> map = new HashMap<>();
        int[] result = new int[2];

        for(int i = 0; i < nums.length; i++){

            int diff = target - nums[i];

            if(map.containsKey(nums[i])){
                result[0] = i;
                result[1] = map.get(nums[i]);
                return result;
            }

            map.put(diff, i);


        }


        return result;

    }
}